//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 此源代码是由 Microsoft.VSDesigner 4.0.30319.42000 版自动生成。
// 
#pragma warning disable 1591

namespace WindowsFormsApplication1.WebReference {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WebService1Soap", Namespace="http://tempuri.org/")]
    public partial class WebService1 : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback SeletOneOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpDataOneOperationCompleted;
        
        private System.Threading.SendOrPostCallback InsetOneOperationCompleted;
        
        private System.Threading.SendOrPostCallback DelectOneOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginOperationCompleted;
        
        private System.Threading.SendOrPostCallback SeletAllOperationCompleted;
        
        private System.Threading.SendOrPostCallback WH_OutOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNetPointInfoOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WebService1() {
            this.Url = global::WindowsFormsApplication1.Properties.Settings.Default.WindowsFormsApplication1_WebReference_WebService1;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event SeletOneCompletedEventHandler SeletOneCompleted;
        
        /// <remarks/>
        public event UpDataOneCompletedEventHandler UpDataOneCompleted;
        
        /// <remarks/>
        public event InsetOneCompletedEventHandler InsetOneCompleted;
        
        /// <remarks/>
        public event DelectOneCompletedEventHandler DelectOneCompleted;
        
        /// <remarks/>
        public event LoginCompletedEventHandler LoginCompleted;
        
        /// <remarks/>
        public event SeletAllCompletedEventHandler SeletAllCompleted;
        
        /// <remarks/>
        public event WH_OutCompletedEventHandler WH_OutCompleted;
        
        /// <remarks/>
        public event GetNetPointInfoCompletedEventHandler GetNetPointInfoCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SeletOne", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string SeletOne(string sql) {
            object[] results = this.Invoke("SeletOne", new object[] {
                        sql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void SeletOneAsync(string sql) {
            this.SeletOneAsync(sql, null);
        }
        
        /// <remarks/>
        public void SeletOneAsync(string sql, object userState) {
            if ((this.SeletOneOperationCompleted == null)) {
                this.SeletOneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSeletOneOperationCompleted);
            }
            this.InvokeAsync("SeletOne", new object[] {
                        sql}, this.SeletOneOperationCompleted, userState);
        }
        
        private void OnSeletOneOperationCompleted(object arg) {
            if ((this.SeletOneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SeletOneCompleted(this, new SeletOneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpDataOne", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string UpDataOne(string sql) {
            object[] results = this.Invoke("UpDataOne", new object[] {
                        sql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void UpDataOneAsync(string sql) {
            this.UpDataOneAsync(sql, null);
        }
        
        /// <remarks/>
        public void UpDataOneAsync(string sql, object userState) {
            if ((this.UpDataOneOperationCompleted == null)) {
                this.UpDataOneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpDataOneOperationCompleted);
            }
            this.InvokeAsync("UpDataOne", new object[] {
                        sql}, this.UpDataOneOperationCompleted, userState);
        }
        
        private void OnUpDataOneOperationCompleted(object arg) {
            if ((this.UpDataOneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpDataOneCompleted(this, new UpDataOneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/InsetOne", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string InsetOne(string sql) {
            object[] results = this.Invoke("InsetOne", new object[] {
                        sql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void InsetOneAsync(string sql) {
            this.InsetOneAsync(sql, null);
        }
        
        /// <remarks/>
        public void InsetOneAsync(string sql, object userState) {
            if ((this.InsetOneOperationCompleted == null)) {
                this.InsetOneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInsetOneOperationCompleted);
            }
            this.InvokeAsync("InsetOne", new object[] {
                        sql}, this.InsetOneOperationCompleted, userState);
        }
        
        private void OnInsetOneOperationCompleted(object arg) {
            if ((this.InsetOneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InsetOneCompleted(this, new InsetOneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DelectOne", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string DelectOne(string sql) {
            object[] results = this.Invoke("DelectOne", new object[] {
                        sql});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void DelectOneAsync(string sql) {
            this.DelectOneAsync(sql, null);
        }
        
        /// <remarks/>
        public void DelectOneAsync(string sql, object userState) {
            if ((this.DelectOneOperationCompleted == null)) {
                this.DelectOneOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDelectOneOperationCompleted);
            }
            this.InvokeAsync("DelectOne", new object[] {
                        sql}, this.DelectOneOperationCompleted, userState);
        }
        
        private void OnDelectOneOperationCompleted(object arg) {
            if ((this.DelectOneCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DelectOneCompleted(this, new DelectOneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Login(string name, string password) {
            object[] results = this.Invoke("Login", new object[] {
                        name,
                        password});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void LoginAsync(string name, string password) {
            this.LoginAsync(name, password, null);
        }
        
        /// <remarks/>
        public void LoginAsync(string name, string password, object userState) {
            if ((this.LoginOperationCompleted == null)) {
                this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
            }
            this.InvokeAsync("Login", new object[] {
                        name,
                        password}, this.LoginOperationCompleted, userState);
        }
        
        private void OnLoginOperationCompleted(object arg) {
            if ((this.LoginCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SeletAll", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet SeletAll(string sql) {
            object[] results = this.Invoke("SeletAll", new object[] {
                        sql});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void SeletAllAsync(string sql) {
            this.SeletAllAsync(sql, null);
        }
        
        /// <remarks/>
        public void SeletAllAsync(string sql, object userState) {
            if ((this.SeletAllOperationCompleted == null)) {
                this.SeletAllOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSeletAllOperationCompleted);
            }
            this.InvokeAsync("SeletAll", new object[] {
                        sql}, this.SeletAllOperationCompleted, userState);
        }
        
        private void OnSeletAllOperationCompleted(object arg) {
            if ((this.SeletAllCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SeletAllCompleted(this, new SeletAllCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/WH_Out", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string WH_Out(string CaseNum, string NetPointNum) {
            object[] results = this.Invoke("WH_Out", new object[] {
                        CaseNum,
                        NetPointNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void WH_OutAsync(string CaseNum, string NetPointNum) {
            this.WH_OutAsync(CaseNum, NetPointNum, null);
        }
        
        /// <remarks/>
        public void WH_OutAsync(string CaseNum, string NetPointNum, object userState) {
            if ((this.WH_OutOperationCompleted == null)) {
                this.WH_OutOperationCompleted = new System.Threading.SendOrPostCallback(this.OnWH_OutOperationCompleted);
            }
            this.InvokeAsync("WH_Out", new object[] {
                        CaseNum,
                        NetPointNum}, this.WH_OutOperationCompleted, userState);
        }
        
        private void OnWH_OutOperationCompleted(object arg) {
            if ((this.WH_OutCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.WH_OutCompleted(this, new WH_OutCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetNetPointInfo", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetNetPointInfo(string CaseNum) {
            object[] results = this.Invoke("GetNetPointInfo", new object[] {
                        CaseNum});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetNetPointInfoAsync(string CaseNum) {
            this.GetNetPointInfoAsync(CaseNum, null);
        }
        
        /// <remarks/>
        public void GetNetPointInfoAsync(string CaseNum, object userState) {
            if ((this.GetNetPointInfoOperationCompleted == null)) {
                this.GetNetPointInfoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNetPointInfoOperationCompleted);
            }
            this.InvokeAsync("GetNetPointInfo", new object[] {
                        CaseNum}, this.GetNetPointInfoOperationCompleted, userState);
        }
        
        private void OnGetNetPointInfoOperationCompleted(object arg) {
            if ((this.GetNetPointInfoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNetPointInfoCompleted(this, new GetNetPointInfoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SeletOneCompletedEventHandler(object sender, SeletOneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SeletOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SeletOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void UpDataOneCompletedEventHandler(object sender, UpDataOneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpDataOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpDataOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void InsetOneCompletedEventHandler(object sender, InsetOneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InsetOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal InsetOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void DelectOneCompletedEventHandler(object sender, DelectOneCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DelectOneCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DelectOneCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void SeletAllCompletedEventHandler(object sender, SeletAllCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SeletAllCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SeletAllCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void WH_OutCompletedEventHandler(object sender, WH_OutCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class WH_OutCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal WH_OutCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    public delegate void GetNetPointInfoCompletedEventHandler(object sender, GetNetPointInfoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.7.3056.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNetPointInfoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNetPointInfoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591